<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iIjNi4EAAAAASUVORK5CYII=
</value>
  </data>
</root>